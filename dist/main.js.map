{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/page.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/lib/adsense-config.ts","webpack:///./src/lib/adsense.component.ts","webpack:///./src/lib/adsense.module.ts","webpack:///./src/lib/public_api.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"header text-center mb-3\\\">\\r\\n  <div class=\\\"pb-5 pt-5\\\">\\r\\n    <h1>ng2-adsense</h1>\\r\\n    <p class=\\\"lead mb-4\\\">Angular AdSense Component</p>\\r\\n    <mdo-github-button\\r\\n      size=\\\"large\\\"\\r\\n      count=\\\"true\\\"\\r\\n      user=\\\"scttcper\\\"\\r\\n      repo=\\\"ng2-adsense\\\"\\r\\n      >\\r\\n    </mdo-github-button>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"container mb-3\\\">\\r\\n  <div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col-12 col-lg-10 col-xl-9\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <h4 class=\\\"card-title\\\">Demo</h4>\\r\\n          <h6 class=\\\"card-subtitle mb-2 text-danger\\\">Disable Adblock</h6>\\r\\n          <p class=\\\"card-text\\\">\\r\\n            Shows AdSense Ad loading on route change.\\r\\n            Sometimes a blank or identical AdSense ad is displayed.\\r\\n          </p>\\r\\n          <ul>\\r\\n            <li><strong>Page 1</strong> - responsive ads</li>\\r\\n            <li><strong>Page 2</strong> - ads with specified width</li>\\r\\n            <li><strong>Page 3 and 4</strong> - same component but w/ setTimeout when the params are changed\\r\\n            to refresh the ads</li>\\r\\n          </ul>\\r\\n          <hr>\\r\\n          <ul class=\\\"nav nav-pills nav-fill\\\">\\r\\n            <li class=\\\"nav-item\\\">\\r\\n              <a class=\\\"nav-link\\\" routerLink=\\\"/\\\" routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\">Page 1</a>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item\\\">\\r\\n              <a class=\\\"nav-link\\\" routerLink=\\\"/2\\\" routerLinkActive=\\\"active\\\">Page 2</a>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item\\\">\\r\\n              <a class=\\\"nav-link\\\" routerLink=\\\"/ads/3\\\" routerLinkActive=\\\"active\\\">Page 3</a>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item\\\">\\r\\n              <a class=\\\"nav-link\\\" routerLink=\\\"/ads/4\\\" routerLinkActive=\\\"active\\\">Page 4</a>\\r\\n            </li>\\r\\n          </ul>\\r\\n          <hr>\\r\\n          <div class=\\\"mt-3\\\" style=\\\"min-height:220px\\\">\\r\\n            <router-outlet></router-outlet>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<footer class=\\\"footer\\\">\\r\\n  <div class=\\\"container text-center pt-3 pb-3\\\">\\r\\n    <small class=\\\"text-muted\\\">\\r\\n      Demo using Angular {{ version.full }}\\r\\n      <br>\\r\\n      Not affiliated with Google AdSense\\r\\n    </small>\\r\\n    <br>\\r\\n    <small class=\\\"text-muted\\\">\\r\\n      <a href=\\\"https://github.com/scttcper/ng2-adsense/\\\">GitHub</a>\\r\\n    </small>\\r\\n  </div>\\r\\n</footer>\\r\\n\"","import { Component, VERSION } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ng2-root',\r\n  templateUrl: './app.component.html',\r\n})\r\nexport class AppComponent {\r\n  version = VERSION;\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { MdoButtonModule } from '@ctrl/ngx-github-buttons';\r\n\r\nimport { AdsenseModule } from '../lib/public_api';\r\nimport { AppComponent } from './app.component';\r\nimport {\r\n  OtherPageComponent,\r\n  PageComponent,\r\n  ReloadPageComponent,\r\n} from './page.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: PageComponent },\r\n  { path: '2', component: OtherPageComponent },\r\n  { path: 'ads/:id', component: ReloadPageComponent },\r\n  { path: '**', redirectTo: '', pathMatch: 'full' },\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    PageComponent,\r\n    OtherPageComponent,\r\n    ReloadPageComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    RouterModule.forRoot(routes, { useHash: true }),\r\n    AdsenseModule.forRoot({\r\n      adClient: 'ca-pub-7640562161899788',\r\n      adSlot: 2930227358,\r\n    }),\r\n    MdoButtonModule,\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n/**\r\n * Uses global values\r\n */\r\n@Component({\r\n  selector: 'ng2-page-1',\r\n  template: `\r\n  <p class=\"text-center\">\r\n    <strong>Current View: {{ title }}</strong>\r\n  </p>\r\n  <ng-adsense></ng-adsense>\r\n  <ng-adsense></ng-adsense>\r\n  `,\r\n})\r\nexport class PageComponent {\r\n  title = 'Page 1';\r\n}\r\n\r\n/**\r\n * Uses local ad values\r\n */\r\n@Component({\r\n  selector: 'ng2-page-2',\r\n  template: `\r\n  <p class=\"text-center\">\r\n    <strong>Current View: {{ title }}</strong>\r\n  </p>\r\n  <ng2-adsense\r\n    [adClient]=\"'ca-pub-7640562161899788'\"\r\n    [adSlot]=\"2930227358\" [width]=\"320\" [height]=\"108\">\r\n  </ng2-adsense>\r\n  <ng2-adsense\r\n    [display]=\"'inline-block'\"\r\n    [width]=\"320\" [height]=\"108\">\r\n  </ng2-adsense>\r\n  `,\r\n})\r\nexport class OtherPageComponent extends PageComponent {\r\n  title = 'Page 2';\r\n}\r\n\r\n/**\r\n * Refreshes ads on params changes\r\n */\r\n@Component({\r\n  selector: 'ng2-page-3',\r\n  template: `\r\n  <p class=\"text-center\">\r\n    <strong>Current View: {{ title }}</strong>\r\n  </p>\r\n  <ng2-adsense *ngIf=\"!loading\"></ng2-adsense>\r\n  <ng2-adsense *ngIf=\"!loading\"></ng2-adsense>\r\n  `,\r\n})\r\nexport class ReloadPageComponent implements OnInit {\r\n  title = 'Page 3';\r\n  loading = true;\r\n\r\n  constructor(private route: ActivatedRoute) {}\r\n\r\n  ngOnInit() {\r\n    this.route.params.subscribe(params => {\r\n      this.title = `Page ${params['id']}`;\r\n      this.loading = true;\r\n      setTimeout(() => (this.loading = false), 200);\r\n    });\r\n  }\r\n}\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n","import { InjectionToken } from '@angular/core';\r\n\r\n/**\r\n * Set optional global default values\r\n */\r\nexport interface AdsenseConfig {\r\n  /** adsense account ca-pub-XXXXXXXXXXXXXXXX */\r\n  adClient: string;\r\n  /** ad slot/number */\r\n  adSlot: string | number;\r\n  /** data-ad-format default: auto */\r\n  adFormat: string;\r\n  /** ins element display style */\r\n  display: string;\r\n  /** ins element height in px */\r\n  width: number;\r\n  /** ins element width in px */\r\n  height: number;\r\n  /** used for in-feed ads */\r\n  layout: string;\r\n  /** used for in-feed ads */\r\n  layoutKey: string;\r\n  /** enable page-level ads */\r\n  pageLevelAds: boolean;\r\n  /** on first load sometimes adsense is not ready */\r\n  timeOutRetry: number;\r\n  adtest: string;\r\n  /** used for flexible ads */\r\n  fullWidthResponsive: boolean;\r\n}\r\n\r\nexport const ADSENSE_TOKEN = new InjectionToken<AdsenseConfig>(\r\n  'AdsenseConfig',\r\n);\r\n","import {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  Inject,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  ViewChild,\r\n} from '@angular/core';\r\n\r\nimport { ADSENSE_TOKEN, AdsenseConfig } from './adsense-config';\r\n\r\n@Component({\r\n  selector: 'ng2-adsense,ng-adsense',\r\n  template: `\r\n  <ins #ins class=\"adsbygoogle\"\r\n    [ngStyle]=\"{'display': display, 'width.px': width, 'height.px': height }\"\r\n    [attr.data-ad-client]=\"adClient\"\r\n    [attr.data-ad-slot]=\"adSlot\"\r\n    [attr.data-ad-format]=\"adFormat\"\r\n    [attr.data-ad-region]=\"adRegion\"\r\n    [attr.data-layout]=\"layout\"\r\n    [attr.data-adtest]=\"adtest\"\r\n    [attr.data-layout-key]=\"layoutKey\"\r\n    [attr.data-full-width-responsive]=\"fullWidthResponsive\">\r\n  </ins>\r\n  `,\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AdsenseComponent implements OnInit, AfterViewInit, OnDestroy {\r\n  /** adsense account ca-pub-XXXXXXXXXXXXXXXX */\r\n  @Input() adClient: string;\r\n  /** ad slot/number */\r\n  @Input() adSlot: string | number;\r\n  @Input() adFormat: string;\r\n  /** can be manually set if you need all ads on a page to have same id page-xxx */\r\n  @Input() adRegion = 'page-' + Math.floor(Math.random() * 10000) + 1;\r\n  /** ins element display style */\r\n  @Input() display: string;\r\n  /** ins element height in px */\r\n  @Input() width: number;\r\n  /** ins element width in px */\r\n  @Input() height: number;\r\n  /** used for in-feed ads */\r\n  @Input() layout: string;\r\n  /** used for in-feed ads */\r\n  @Input() layoutKey: string;\r\n  /** enable page-level ads */\r\n  @Input() pageLevelAds: boolean;\r\n  /** on first load sometimes adsense is not ready */\r\n  @Input() timeOutRetry: number;\r\n  /** sets up some sort of google test ad */\r\n  @Input() adtest: string;\r\n  /* used for flexible ads */\r\n  @Input() fullWidthResponsive: boolean;\r\n  @ViewChild('ins') ins: any;\r\n\r\n  constructor(\r\n    @Inject(ADSENSE_TOKEN) private config: AdsenseConfig,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    const config = this.config;\r\n    function use<T>(source: T, defaultValue: T): T {\r\n      return config && source !== undefined ? source : defaultValue;\r\n    }\r\n    this.adClient = use(this.adClient, config.adClient);\r\n    this.adSlot = use(this.adSlot, config.adSlot);\r\n    this.adFormat = use(this.adFormat, config.adFormat || 'auto');\r\n    this.display = use(this.display, config.display || 'block');\r\n    this.width = use(this.width, config.width);\r\n    this.height = use(this.height, config.height);\r\n    this.layout = use(this.layout, config.layout);\r\n    this.layoutKey = use(this.layoutKey, config.layoutKey);\r\n    this.pageLevelAds = use(this.pageLevelAds, config.pageLevelAds);\r\n    this.timeOutRetry = use(this.timeOutRetry, config.timeOutRetry || 200);\r\n    this.adtest = use(this.adtest, config.adtest);\r\n    this.fullWidthResponsive = use(this.fullWidthResponsive, config.fullWidthResponsive);\r\n  }\r\n  ngOnDestroy() {\r\n    const iframe = this.ins.nativeElement.querySelector('iframe');\r\n    if (iframe && iframe.contentWindow) {\r\n      iframe.src = 'about:blank';\r\n      iframe.remove();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * attempts to push the ad twice. Usually if one doesn't work the other\r\n   * will depeding on if the browser has the adsense code cached and\r\n   * if its the first page to be loaded\r\n   */\r\n  ngAfterViewInit() {\r\n    const res = this.push();\r\n    if (res instanceof TypeError) {\r\n      setTimeout(() => this.push(), this.timeOutRetry);\r\n    }\r\n  }\r\n\r\n  push() {\r\n    const p: any = {};\r\n    if (this.pageLevelAds) {\r\n      p.google_ad_client = this.adClient;\r\n      p.enable_page_level_ads = true;\r\n    }\r\n    try {\r\n      const adsbygoogle = window['adsbygoogle'];\r\n      adsbygoogle.push(p);\r\n      return true;\r\n    } catch (e) {\r\n      return e;\r\n    }\r\n  }\r\n}\r\n\r\n","import { CommonModule } from '@angular/common';\r\nimport { ModuleWithProviders, NgModule } from '@angular/core';\r\n\r\nimport { AdsenseConfig, ADSENSE_TOKEN } from './adsense-config';\r\nimport { AdsenseComponent } from './adsense.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  exports: [AdsenseComponent],\r\n  declarations: [AdsenseComponent],\r\n})\r\nexport class AdsenseModule {\r\n  static forRoot(config: Partial<AdsenseConfig> = {}): ModuleWithProviders {\r\n    return {\r\n      ngModule: AdsenseModule,\r\n      providers: [{ provide: ADSENSE_TOKEN, useValue: config }],\r\n    };\r\n  }\r\n}\r\n","export { AdsenseComponent } from './adsense.component';\r\nexport { AdsenseModule } from './adsense.module';\r\nexport { AdsenseConfig, ADSENSE_TOKEN } from './adsense-config';\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic()\r\n  .bootstrapModule(AppModule, {\r\n    preserveWhitespaces: false,\r\n  })\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}